// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: MallService.proto
#ifndef GRPC_MallService_2eproto__INCLUDED
#define GRPC_MallService_2eproto__INCLUDED

#include "MallService.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace myApplication {

class MallService final {
 public:
  static constexpr char const* service_full_name() {
    return "myApplication.MallService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::myApplication::SearchOnSaleGoodsRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>> AsyncdoSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>>(AsyncdoSearchOnSaleGoodsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>> PrepareAsyncdoSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>>(PrepareAsyncdoSearchOnSaleGoodsRaw(context, request, cq));
    }
    virtual ::grpc::Status doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::myApplication::ListSpecialGoodRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>> AsyncdoListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>>(AsyncdoListSpecialGoodRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>> PrepareAsyncdoListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>>(PrepareAsyncdoListSpecialGoodRaw(context, request, cq));
    }
    virtual ::grpc::Status doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::myApplication::PurchaseRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>> AsyncdoPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>>(AsyncdoPurchaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>> PrepareAsyncdoPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>>(PrepareAsyncdoPurchaseRaw(context, request, cq));
    }
    virtual ::grpc::Status doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::myApplication::ManageTradesRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>> AsyncdoManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>>(AsyncdoManageTradesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>> PrepareAsyncdoManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>>(PrepareAsyncdoManageTradesRaw(context, request, cq));
    }
    virtual ::grpc::Status doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::myApplication::SaleRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>> AsyncdoSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>>(AsyncdoSaleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>> PrepareAsyncdoSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>>(PrepareAsyncdoSaleRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>* AsyncdoSearchOnSaleGoodsRaw(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SearchOnSaleGoodsRsq>* PrepareAsyncdoSearchOnSaleGoodsRaw(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>* AsyncdoListSpecialGoodRaw(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ListSpecialGoodRsq>* PrepareAsyncdoListSpecialGoodRaw(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>* AsyncdoPurchaseRaw(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::PurchaseRsq>* PrepareAsyncdoPurchaseRaw(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>* AsyncdoManageTradesRaw(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::ManageTradesRsq>* PrepareAsyncdoManageTradesRaw(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>* AsyncdoSaleRaw(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::SaleRsq>* PrepareAsyncdoSaleRaw(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::myApplication::SearchOnSaleGoodsRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>> AsyncdoSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>>(AsyncdoSearchOnSaleGoodsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>> PrepareAsyncdoSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>>(PrepareAsyncdoSearchOnSaleGoodsRaw(context, request, cq));
    }
    ::grpc::Status doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::myApplication::ListSpecialGoodRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>> AsyncdoListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>>(AsyncdoListSpecialGoodRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>> PrepareAsyncdoListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>>(PrepareAsyncdoListSpecialGoodRaw(context, request, cq));
    }
    ::grpc::Status doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::myApplication::PurchaseRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>> AsyncdoPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>>(AsyncdoPurchaseRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>> PrepareAsyncdoPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>>(PrepareAsyncdoPurchaseRaw(context, request, cq));
    }
    ::grpc::Status doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::myApplication::ManageTradesRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>> AsyncdoManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>>(AsyncdoManageTradesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>> PrepareAsyncdoManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>>(PrepareAsyncdoManageTradesRaw(context, request, cq));
    }
    ::grpc::Status doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::myApplication::SaleRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>> AsyncdoSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>>(AsyncdoSaleRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>> PrepareAsyncdoSale(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>>(PrepareAsyncdoSaleRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response, std::function<void(::grpc::Status)>) override;
      void doSearchOnSaleGoods(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response, std::function<void(::grpc::Status)>) override;
      void doListSpecialGood(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response, std::function<void(::grpc::Status)>) override;
      void doPurchase(::grpc::ClientContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response, std::function<void(::grpc::Status)>) override;
      void doManageTrades(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response, std::function<void(::grpc::Status)>) override;
      void doSale(::grpc::ClientContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>* AsyncdoSearchOnSaleGoodsRaw(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::SearchOnSaleGoodsRsq>* PrepareAsyncdoSearchOnSaleGoodsRaw(::grpc::ClientContext* context, const ::myApplication::SearchOnSaleGoodsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>* AsyncdoListSpecialGoodRaw(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::ListSpecialGoodRsq>* PrepareAsyncdoListSpecialGoodRaw(::grpc::ClientContext* context, const ::myApplication::ListSpecialGoodReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>* AsyncdoPurchaseRaw(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::PurchaseRsq>* PrepareAsyncdoPurchaseRaw(::grpc::ClientContext* context, const ::myApplication::PurchaseReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>* AsyncdoManageTradesRaw(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::ManageTradesRsq>* PrepareAsyncdoManageTradesRaw(::grpc::ClientContext* context, const ::myApplication::ManageTradesReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>* AsyncdoSaleRaw(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::SaleRsq>* PrepareAsyncdoSaleRaw(::grpc::ClientContext* context, const ::myApplication::SaleReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_doSearchOnSaleGoods_;
    const ::grpc::internal::RpcMethod rpcmethod_doListSpecialGood_;
    const ::grpc::internal::RpcMethod rpcmethod_doPurchase_;
    const ::grpc::internal::RpcMethod rpcmethod_doManageTrades_;
    const ::grpc::internal::RpcMethod rpcmethod_doSale_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response);
    virtual ::grpc::Status doListSpecialGood(::grpc::ServerContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response);
    virtual ::grpc::Status doPurchase(::grpc::ServerContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response);
    virtual ::grpc::Status doManageTrades(::grpc::ServerContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response);
    virtual ::grpc::Status doSale(::grpc::ServerContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchOnSaleGoods(::grpc::ServerContext* context, ::myApplication::SearchOnSaleGoodsReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::SearchOnSaleGoodsRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoListSpecialGood(::grpc::ServerContext* context, ::myApplication::ListSpecialGoodReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::ListSpecialGoodRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doPurchase() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoPurchase(::grpc::ServerContext* context, ::myApplication::PurchaseReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::PurchaseRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doManageTrades() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoManageTrades(::grpc::ServerContext* context, ::myApplication::ManageTradesReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::ManageTradesRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doSale() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSale(::grpc::ServerContext* context, ::myApplication::SaleReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::SaleRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_doSearchOnSaleGoods<WithAsyncMethod_doListSpecialGood<WithAsyncMethod_doPurchase<WithAsyncMethod_doManageTrades<WithAsyncMethod_doSale<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::SearchOnSaleGoodsReq, ::myApplication::SearchOnSaleGoodsRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::SearchOnSaleGoodsReq* request, ::myApplication::SearchOnSaleGoodsRsq* response) { return this->doSearchOnSaleGoods(context, request, response); }));}
    void SetMessageAllocatorFor_doSearchOnSaleGoods(
        ::grpc::MessageAllocator< ::myApplication::SearchOnSaleGoodsReq, ::myApplication::SearchOnSaleGoodsRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::SearchOnSaleGoodsReq, ::myApplication::SearchOnSaleGoodsRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchOnSaleGoods(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::ListSpecialGoodReq, ::myApplication::ListSpecialGoodRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::ListSpecialGoodReq* request, ::myApplication::ListSpecialGoodRsq* response) { return this->doListSpecialGood(context, request, response); }));}
    void SetMessageAllocatorFor_doListSpecialGood(
        ::grpc::MessageAllocator< ::myApplication::ListSpecialGoodReq, ::myApplication::ListSpecialGoodRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::ListSpecialGoodReq, ::myApplication::ListSpecialGoodRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doListSpecialGood(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doPurchase() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::PurchaseReq, ::myApplication::PurchaseRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::PurchaseReq* request, ::myApplication::PurchaseRsq* response) { return this->doPurchase(context, request, response); }));}
    void SetMessageAllocatorFor_doPurchase(
        ::grpc::MessageAllocator< ::myApplication::PurchaseReq, ::myApplication::PurchaseRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::PurchaseReq, ::myApplication::PurchaseRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doPurchase(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doManageTrades() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::ManageTradesReq, ::myApplication::ManageTradesRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::ManageTradesReq* request, ::myApplication::ManageTradesRsq* response) { return this->doManageTrades(context, request, response); }));}
    void SetMessageAllocatorFor_doManageTrades(
        ::grpc::MessageAllocator< ::myApplication::ManageTradesReq, ::myApplication::ManageTradesRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::ManageTradesReq, ::myApplication::ManageTradesRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doManageTrades(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doSale() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::SaleReq, ::myApplication::SaleRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::SaleReq* request, ::myApplication::SaleRsq* response) { return this->doSale(context, request, response); }));}
    void SetMessageAllocatorFor_doSale(
        ::grpc::MessageAllocator< ::myApplication::SaleReq, ::myApplication::SaleRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::SaleReq, ::myApplication::SaleRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSale(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_doSearchOnSaleGoods<WithCallbackMethod_doListSpecialGood<WithCallbackMethod_doPurchase<WithCallbackMethod_doManageTrades<WithCallbackMethod_doSale<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doPurchase() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doManageTrades() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doSale() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchOnSaleGoods(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoListSpecialGood(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doPurchase() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoPurchase(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doManageTrades() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoManageTrades(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doSale() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSale(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doSearchOnSaleGoods(context, request, response); }));
    }
    ~WithRawCallbackMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchOnSaleGoods(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doListSpecialGood(context, request, response); }));
    }
    ~WithRawCallbackMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doListSpecialGood(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doPurchase() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doPurchase(context, request, response); }));
    }
    ~WithRawCallbackMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doPurchase(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doManageTrades() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doManageTrades(context, request, response); }));
    }
    ~WithRawCallbackMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doManageTrades(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doSale() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doSale(context, request, response); }));
    }
    ~WithRawCallbackMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSale(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doSearchOnSaleGoods : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doSearchOnSaleGoods() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::SearchOnSaleGoodsReq, ::myApplication::SearchOnSaleGoodsRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::SearchOnSaleGoodsReq, ::myApplication::SearchOnSaleGoodsRsq>* streamer) {
                       return this->StreameddoSearchOnSaleGoods(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doSearchOnSaleGoods() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doSearchOnSaleGoods(::grpc::ServerContext* /*context*/, const ::myApplication::SearchOnSaleGoodsReq* /*request*/, ::myApplication::SearchOnSaleGoodsRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoSearchOnSaleGoods(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::SearchOnSaleGoodsReq,::myApplication::SearchOnSaleGoodsRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doListSpecialGood : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doListSpecialGood() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::ListSpecialGoodReq, ::myApplication::ListSpecialGoodRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::ListSpecialGoodReq, ::myApplication::ListSpecialGoodRsq>* streamer) {
                       return this->StreameddoListSpecialGood(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doListSpecialGood() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doListSpecialGood(::grpc::ServerContext* /*context*/, const ::myApplication::ListSpecialGoodReq* /*request*/, ::myApplication::ListSpecialGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoListSpecialGood(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::ListSpecialGoodReq,::myApplication::ListSpecialGoodRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doPurchase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doPurchase() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::PurchaseReq, ::myApplication::PurchaseRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::PurchaseReq, ::myApplication::PurchaseRsq>* streamer) {
                       return this->StreameddoPurchase(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doPurchase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doPurchase(::grpc::ServerContext* /*context*/, const ::myApplication::PurchaseReq* /*request*/, ::myApplication::PurchaseRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoPurchase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::PurchaseReq,::myApplication::PurchaseRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doManageTrades : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doManageTrades() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::ManageTradesReq, ::myApplication::ManageTradesRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::ManageTradesReq, ::myApplication::ManageTradesRsq>* streamer) {
                       return this->StreameddoManageTrades(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doManageTrades() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doManageTrades(::grpc::ServerContext* /*context*/, const ::myApplication::ManageTradesReq* /*request*/, ::myApplication::ManageTradesRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoManageTrades(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::ManageTradesReq,::myApplication::ManageTradesRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doSale : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doSale() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::SaleReq, ::myApplication::SaleRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::SaleReq, ::myApplication::SaleRsq>* streamer) {
                       return this->StreameddoSale(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doSale() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doSale(::grpc::ServerContext* /*context*/, const ::myApplication::SaleReq* /*request*/, ::myApplication::SaleRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoSale(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::SaleReq,::myApplication::SaleRsq>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_doSearchOnSaleGoods<WithStreamedUnaryMethod_doListSpecialGood<WithStreamedUnaryMethod_doPurchase<WithStreamedUnaryMethod_doManageTrades<WithStreamedUnaryMethod_doSale<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_doSearchOnSaleGoods<WithStreamedUnaryMethod_doListSpecialGood<WithStreamedUnaryMethod_doPurchase<WithStreamedUnaryMethod_doManageTrades<WithStreamedUnaryMethod_doSale<Service > > > > > StreamedService;
};

}  // namespace myApplication


#endif  // GRPC_MallService_2eproto__INCLUDED
