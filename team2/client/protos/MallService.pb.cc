// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MallService.proto

#include "MallService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace myApplication {
constexpr SearchOnSaleGoodsReq::SearchOnSaleGoodsReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goodname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SearchOnSaleGoodsReqDefaultTypeInternal {
  constexpr SearchOnSaleGoodsReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchOnSaleGoodsReqDefaultTypeInternal() {}
  union {
    SearchOnSaleGoodsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchOnSaleGoodsReqDefaultTypeInternal _SearchOnSaleGoodsReq_default_instance_;
constexpr SearchOnSaleGoodsRsq_goods::SearchOnSaleGoodsRsq_goods(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goodname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , goodid_(int64_t{0})
  , tradeamount_(int64_t{0})
  , userid_(int64_t{0})
  , num_(int64_t{0}){}
struct SearchOnSaleGoodsRsq_goodsDefaultTypeInternal {
  constexpr SearchOnSaleGoodsRsq_goodsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchOnSaleGoodsRsq_goodsDefaultTypeInternal() {}
  union {
    SearchOnSaleGoodsRsq_goods _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchOnSaleGoodsRsq_goodsDefaultTypeInternal _SearchOnSaleGoodsRsq_goods_default_instance_;
constexpr SearchOnSaleGoodsRsq::SearchOnSaleGoodsRsq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : good_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct SearchOnSaleGoodsRsqDefaultTypeInternal {
  constexpr SearchOnSaleGoodsRsqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchOnSaleGoodsRsqDefaultTypeInternal() {}
  union {
    SearchOnSaleGoodsRsq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchOnSaleGoodsRsqDefaultTypeInternal _SearchOnSaleGoodsRsq_default_instance_;
constexpr ListSpecialGoodReq::ListSpecialGoodReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : specailnum_(0){}
struct ListSpecialGoodReqDefaultTypeInternal {
  constexpr ListSpecialGoodReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSpecialGoodReqDefaultTypeInternal() {}
  union {
    ListSpecialGoodReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSpecialGoodReqDefaultTypeInternal _ListSpecialGoodReq_default_instance_;
constexpr ListSpecialGoodRsq_goods::ListSpecialGoodRsq_goods(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goodname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , goodid_(int64_t{0})
  , tradeamount_(int64_t{0})
  , userid_(int64_t{0}){}
struct ListSpecialGoodRsq_goodsDefaultTypeInternal {
  constexpr ListSpecialGoodRsq_goodsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSpecialGoodRsq_goodsDefaultTypeInternal() {}
  union {
    ListSpecialGoodRsq_goods _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSpecialGoodRsq_goodsDefaultTypeInternal _ListSpecialGoodRsq_goods_default_instance_;
constexpr ListSpecialGoodRsq::ListSpecialGoodRsq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : good_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct ListSpecialGoodRsqDefaultTypeInternal {
  constexpr ListSpecialGoodRsqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ListSpecialGoodRsqDefaultTypeInternal() {}
  union {
    ListSpecialGoodRsq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ListSpecialGoodRsqDefaultTypeInternal _ListSpecialGoodRsq_default_instance_;
constexpr PurchaseReq::PurchaseReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goodid_(int64_t{0})
  , money_(int64_t{0})
  , id_(int64_t{0})
  , num_(int64_t{0})
  , salerid_(int64_t{0})
  , goodspecial_(0){}
struct PurchaseReqDefaultTypeInternal {
  constexpr PurchaseReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PurchaseReqDefaultTypeInternal() {}
  union {
    PurchaseReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PurchaseReqDefaultTypeInternal _PurchaseReq_default_instance_;
constexpr PurchaseRsq::PurchaseRsq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct PurchaseRsqDefaultTypeInternal {
  constexpr PurchaseRsqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PurchaseRsqDefaultTypeInternal() {}
  union {
    PurchaseRsq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PurchaseRsqDefaultTypeInternal _PurchaseRsq_default_instance_;
constexpr ManageTradesReq::ManageTradesReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : userid_(int64_t{0})
  , goodid_(int64_t{0}){}
struct ManageTradesReqDefaultTypeInternal {
  constexpr ManageTradesReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ManageTradesReqDefaultTypeInternal() {}
  union {
    ManageTradesReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ManageTradesReqDefaultTypeInternal _ManageTradesReq_default_instance_;
constexpr ManageTradesRsq_trade::ManageTradesRsq_trade(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tradetime_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tradeid_(int64_t{0})
  , goodid_(int64_t{0})
  , userid_(int64_t{0})
  , trademoney_(int64_t{0})
  , kind_(0){}
struct ManageTradesRsq_tradeDefaultTypeInternal {
  constexpr ManageTradesRsq_tradeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ManageTradesRsq_tradeDefaultTypeInternal() {}
  union {
    ManageTradesRsq_trade _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ManageTradesRsq_tradeDefaultTypeInternal _ManageTradesRsq_trade_default_instance_;
constexpr ManageTradesRsq::ManageTradesRsq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : trades_()
  , message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct ManageTradesRsqDefaultTypeInternal {
  constexpr ManageTradesRsqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ManageTradesRsqDefaultTypeInternal() {}
  union {
    ManageTradesRsq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ManageTradesRsqDefaultTypeInternal _ManageTradesRsq_default_instance_;
constexpr SaleReq::SaleReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : goodid_(int64_t{0})
  , money_(int64_t{0})
  , id_(int64_t{0})
  , num_(int64_t{0})
  , kind_(0)
  , goodspecial_(0){}
struct SaleReqDefaultTypeInternal {
  constexpr SaleReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaleReqDefaultTypeInternal() {}
  union {
    SaleReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SaleReqDefaultTypeInternal _SaleReq_default_instance_;
constexpr SaleRsq::SaleRsq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : message_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , status_(0){}
struct SaleRsqDefaultTypeInternal {
  constexpr SaleRsqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SaleRsqDefaultTypeInternal() {}
  union {
    SaleRsq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SaleRsqDefaultTypeInternal _SaleRsq_default_instance_;
}  // namespace myApplication
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MallService_2eproto[13];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_MallService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MallService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MallService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsReq, goodname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, goodid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, goodname_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, tradeamount_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, userid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq_goods, num_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq, status_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq, message_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SearchOnSaleGoodsRsq, good_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodReq, specailnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq_goods, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq_goods, goodid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq_goods, goodname_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq_goods, tradeamount_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq_goods, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq, status_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq, message_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ListSpecialGoodRsq, good_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, goodid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, money_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, id_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, num_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, goodspecial_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseReq, salerid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseRsq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseRsq, status_),
  PROTOBUF_FIELD_OFFSET(::myApplication::PurchaseRsq, message_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesReq, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesReq, userid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesReq, goodid_),
  ~0u,
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, tradeid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, kind_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, goodid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, userid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, tradetime_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq_trade, trademoney_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq, status_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq, message_),
  PROTOBUF_FIELD_OFFSET(::myApplication::ManageTradesRsq, trades_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, goodid_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, money_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, id_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, kind_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, num_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleReq, goodspecial_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleRsq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleRsq, status_),
  PROTOBUF_FIELD_OFFSET(::myApplication::SaleRsq, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::myApplication::SearchOnSaleGoodsReq)},
  { 7, -1, -1, sizeof(::myApplication::SearchOnSaleGoodsRsq_goods)},
  { 18, -1, -1, sizeof(::myApplication::SearchOnSaleGoodsRsq)},
  { 27, -1, -1, sizeof(::myApplication::ListSpecialGoodReq)},
  { 34, -1, -1, sizeof(::myApplication::ListSpecialGoodRsq_goods)},
  { 44, -1, -1, sizeof(::myApplication::ListSpecialGoodRsq)},
  { 53, -1, -1, sizeof(::myApplication::PurchaseReq)},
  { 65, -1, -1, sizeof(::myApplication::PurchaseRsq)},
  { 73, 81, -1, sizeof(::myApplication::ManageTradesReq)},
  { 83, -1, -1, sizeof(::myApplication::ManageTradesRsq_trade)},
  { 95, -1, -1, sizeof(::myApplication::ManageTradesRsq)},
  { 104, -1, -1, sizeof(::myApplication::SaleReq)},
  { 116, -1, -1, sizeof(::myApplication::SaleRsq)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_SearchOnSaleGoodsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_SearchOnSaleGoodsRsq_goods_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_SearchOnSaleGoodsRsq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ListSpecialGoodReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ListSpecialGoodRsq_goods_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ListSpecialGoodRsq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_PurchaseReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_PurchaseRsq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ManageTradesReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ManageTradesRsq_trade_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_ManageTradesRsq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_SaleReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::myApplication::_SaleRsq_default_instance_),
};

const char descriptor_table_protodef_MallService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021MallService.proto\022\rmyApplication\"(\n\024Se"
  "archOnSaleGoodsReq\022\020\n\010goodName\030\001 \001(\t\"\315\001\n"
  "\024SearchOnSaleGoodsRsq\022\016\n\006status\030\001 \001(\005\022\017\n"
  "\007message\030\002 \001(\t\0227\n\004good\030\003 \003(\0132).myApplica"
  "tion.SearchOnSaleGoodsRsq.goods\032[\n\005goods"
  "\022\016\n\006goodid\030\001 \001(\003\022\020\n\010goodname\030\002 \001(\t\022\023\n\013tr"
  "adeAmount\030\003 \001(\003\022\016\n\006userid\030\004 \001(\003\022\013\n\003num\030\005"
  " \001(\003\"(\n\022ListSpecialGoodReq\022\022\n\nSpecailNum"
  "\030\001 \001(\005\"\274\001\n\022ListSpecialGoodRsq\022\016\n\006status\030"
  "\001 \001(\005\022\017\n\007message\030\002 \001(\t\0225\n\004good\030\003 \003(\0132\'.m"
  "yApplication.ListSpecialGoodRsq.goods\032N\n"
  "\005goods\022\016\n\006goodid\030\001 \001(\003\022\020\n\010goodname\030\002 \001(\t"
  "\022\023\n\013tradeAmount\030\003 \001(\003\022\016\n\006userid\030\004 \001(\003\"k\n"
  "\013PurchaseReq\022\016\n\006goodid\030\001 \001(\003\022\r\n\005money\030\002 "
  "\001(\003\022\n\n\002id\030\003 \001(\003\022\013\n\003num\030\004 \001(\003\022\023\n\013goodSpec"
  "ial\030\005 \001(\005\022\017\n\007salerid\030\006 \001(\003\".\n\013PurchaseRs"
  "q\022\016\n\006status\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\"A\n\017Ma"
  "nageTradesReq\022\016\n\006userid\030\001 \001(\003\022\023\n\006goodid\030"
  "\002 \001(\003H\000\210\001\001B\t\n\007_goodid\"\327\001\n\017ManageTradesRs"
  "q\022\016\n\006status\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\0224\n\006tr"
  "ades\030\003 \003(\0132$.myApplication.ManageTradesR"
  "sq.trade\032m\n\005trade\022\017\n\007tradeid\030\001 \001(\003\022\014\n\004ki"
  "nd\030\002 \001(\005\022\016\n\006goodid\030\003 \001(\003\022\016\n\006userid\030\004 \001(\003"
  "\022\021\n\ttradeTime\030\005 \001(\t\022\022\n\ntradeMoney\030\006 \001(\003\""
  "d\n\007SaleReq\022\016\n\006goodid\030\001 \001(\003\022\r\n\005money\030\002 \001("
  "\003\022\n\n\002id\030\003 \001(\003\022\014\n\004kind\030\004 \001(\005\022\013\n\003num\030\005 \001(\003"
  "\022\023\n\013goodSpecial\030\006 \001(\005\"*\n\007SaleRsq\022\016\n\006stat"
  "us\030\001 \001(\005\022\017\n\007message\030\002 \001(\t2\245\003\n\013MallServic"
  "e\022a\n\023doSearchOnSaleGoods\022#.myApplication"
  ".SearchOnSaleGoodsReq\032#.myApplication.Se"
  "archOnSaleGoodsRsq\"\000\022[\n\021doListSpecialGoo"
  "d\022!.myApplication.ListSpecialGoodReq\032!.m"
  "yApplication.ListSpecialGoodRsq\"\000\022F\n\ndoP"
  "urchase\022\032.myApplication.PurchaseReq\032\032.my"
  "Application.PurchaseRsq\"\000\022R\n\016doManageTra"
  "des\022\036.myApplication.ManageTradesReq\032\036.my"
  "Application.ManageTradesRsq\"\000\022:\n\006doSale\022"
  "\026.myApplication.SaleReq\032\026.myApplication."
  "SaleRsq\"\000b\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MallService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MallService_2eproto = {
  false, false, 1537, descriptor_table_protodef_MallService_2eproto, "MallService.proto", 
  &descriptor_table_MallService_2eproto_once, nullptr, 0, 13,
  schemas, file_default_instances, TableStruct_MallService_2eproto::offsets,
  file_level_metadata_MallService_2eproto, file_level_enum_descriptors_MallService_2eproto, file_level_service_descriptors_MallService_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_MallService_2eproto_getter() {
  return &descriptor_table_MallService_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_MallService_2eproto(&descriptor_table_MallService_2eproto);
namespace myApplication {

// ===================================================================

class SearchOnSaleGoodsReq::_Internal {
 public:
};

SearchOnSaleGoodsReq::SearchOnSaleGoodsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.SearchOnSaleGoodsReq)
}
SearchOnSaleGoodsReq::SearchOnSaleGoodsReq(const SearchOnSaleGoodsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_goodname().empty()) {
    goodname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_goodname(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:myApplication.SearchOnSaleGoodsReq)
}

void SearchOnSaleGoodsReq::SharedCtor() {
goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SearchOnSaleGoodsReq::~SearchOnSaleGoodsReq() {
  // @@protoc_insertion_point(destructor:myApplication.SearchOnSaleGoodsReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchOnSaleGoodsReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  goodname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchOnSaleGoodsReq::ArenaDtor(void* object) {
  SearchOnSaleGoodsReq* _this = reinterpret_cast< SearchOnSaleGoodsReq* >(object);
  (void)_this;
}
void SearchOnSaleGoodsReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchOnSaleGoodsReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchOnSaleGoodsReq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.SearchOnSaleGoodsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchOnSaleGoodsReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string goodName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_goodname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.SearchOnSaleGoodsReq.goodName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchOnSaleGoodsReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.SearchOnSaleGoodsReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string goodName = 1;
  if (!this->_internal_goodname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_goodname().data(), static_cast<int>(this->_internal_goodname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.SearchOnSaleGoodsReq.goodName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_goodname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.SearchOnSaleGoodsReq)
  return target;
}

size_t SearchOnSaleGoodsReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.SearchOnSaleGoodsReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string goodName = 1;
  if (!this->_internal_goodname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_goodname());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchOnSaleGoodsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchOnSaleGoodsReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchOnSaleGoodsReq::GetClassData() const { return &_class_data_; }

void SearchOnSaleGoodsReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchOnSaleGoodsReq *>(to)->MergeFrom(
      static_cast<const SearchOnSaleGoodsReq &>(from));
}


void SearchOnSaleGoodsReq::MergeFrom(const SearchOnSaleGoodsReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.SearchOnSaleGoodsReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_goodname().empty()) {
    _internal_set_goodname(from._internal_goodname());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchOnSaleGoodsReq::CopyFrom(const SearchOnSaleGoodsReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.SearchOnSaleGoodsReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchOnSaleGoodsReq::IsInitialized() const {
  return true;
}

void SearchOnSaleGoodsReq::InternalSwap(SearchOnSaleGoodsReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &goodname_, lhs_arena,
      &other->goodname_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchOnSaleGoodsReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[0]);
}

// ===================================================================

class SearchOnSaleGoodsRsq_goods::_Internal {
 public:
};

SearchOnSaleGoodsRsq_goods::SearchOnSaleGoodsRsq_goods(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.SearchOnSaleGoodsRsq.goods)
}
SearchOnSaleGoodsRsq_goods::SearchOnSaleGoodsRsq_goods(const SearchOnSaleGoodsRsq_goods& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_goodname().empty()) {
    goodname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_goodname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:myApplication.SearchOnSaleGoodsRsq.goods)
}

void SearchOnSaleGoodsRsq_goods::SharedCtor() {
goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goodid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
}

SearchOnSaleGoodsRsq_goods::~SearchOnSaleGoodsRsq_goods() {
  // @@protoc_insertion_point(destructor:myApplication.SearchOnSaleGoodsRsq.goods)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchOnSaleGoodsRsq_goods::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  goodname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchOnSaleGoodsRsq_goods::ArenaDtor(void* object) {
  SearchOnSaleGoodsRsq_goods* _this = reinterpret_cast< SearchOnSaleGoodsRsq_goods* >(object);
  (void)_this;
}
void SearchOnSaleGoodsRsq_goods::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchOnSaleGoodsRsq_goods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchOnSaleGoodsRsq_goods::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.SearchOnSaleGoodsRsq.goods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodname_.ClearToEmpty();
  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(num_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchOnSaleGoodsRsq_goods::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 goodid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string goodname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_goodname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.SearchOnSaleGoodsRsq.goods.goodname"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 tradeAmount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tradeamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 userid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchOnSaleGoodsRsq_goods::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.SearchOnSaleGoodsRsq.goods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_goodid(), target);
  }

  // string goodname = 2;
  if (!this->_internal_goodname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_goodname().data(), static_cast<int>(this->_internal_goodname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.SearchOnSaleGoodsRsq.goods.goodname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_goodname(), target);
  }

  // int64 tradeAmount = 3;
  if (this->_internal_tradeamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_tradeamount(), target);
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_userid(), target);
  }

  // int64 num = 5;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.SearchOnSaleGoodsRsq.goods)
  return target;
}

size_t SearchOnSaleGoodsRsq_goods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.SearchOnSaleGoodsRsq.goods)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string goodname = 2;
  if (!this->_internal_goodname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_goodname());
  }

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  // int64 tradeAmount = 3;
  if (this->_internal_tradeamount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_tradeamount());
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_userid());
  }

  // int64 num = 5;
  if (this->_internal_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchOnSaleGoodsRsq_goods::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchOnSaleGoodsRsq_goods::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchOnSaleGoodsRsq_goods::GetClassData() const { return &_class_data_; }

void SearchOnSaleGoodsRsq_goods::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchOnSaleGoodsRsq_goods *>(to)->MergeFrom(
      static_cast<const SearchOnSaleGoodsRsq_goods &>(from));
}


void SearchOnSaleGoodsRsq_goods::MergeFrom(const SearchOnSaleGoodsRsq_goods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.SearchOnSaleGoodsRsq.goods)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_goodname().empty()) {
    _internal_set_goodname(from._internal_goodname());
  }
  if (from._internal_goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from._internal_tradeamount() != 0) {
    _internal_set_tradeamount(from._internal_tradeamount());
  }
  if (from._internal_userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchOnSaleGoodsRsq_goods::CopyFrom(const SearchOnSaleGoodsRsq_goods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.SearchOnSaleGoodsRsq.goods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchOnSaleGoodsRsq_goods::IsInitialized() const {
  return true;
}

void SearchOnSaleGoodsRsq_goods::InternalSwap(SearchOnSaleGoodsRsq_goods* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &goodname_, lhs_arena,
      &other->goodname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchOnSaleGoodsRsq_goods, num_)
      + sizeof(SearchOnSaleGoodsRsq_goods::num_)
      - PROTOBUF_FIELD_OFFSET(SearchOnSaleGoodsRsq_goods, goodid_)>(
          reinterpret_cast<char*>(&goodid_),
          reinterpret_cast<char*>(&other->goodid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchOnSaleGoodsRsq_goods::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[1]);
}

// ===================================================================

class SearchOnSaleGoodsRsq::_Internal {
 public:
};

SearchOnSaleGoodsRsq::SearchOnSaleGoodsRsq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  good_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.SearchOnSaleGoodsRsq)
}
SearchOnSaleGoodsRsq::SearchOnSaleGoodsRsq(const SearchOnSaleGoodsRsq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      good_(from.good_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:myApplication.SearchOnSaleGoodsRsq)
}

void SearchOnSaleGoodsRsq::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = 0;
}

SearchOnSaleGoodsRsq::~SearchOnSaleGoodsRsq() {
  // @@protoc_insertion_point(destructor:myApplication.SearchOnSaleGoodsRsq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchOnSaleGoodsRsq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchOnSaleGoodsRsq::ArenaDtor(void* object) {
  SearchOnSaleGoodsRsq* _this = reinterpret_cast< SearchOnSaleGoodsRsq* >(object);
  (void)_this;
}
void SearchOnSaleGoodsRsq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchOnSaleGoodsRsq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchOnSaleGoodsRsq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.SearchOnSaleGoodsRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  good_.Clear();
  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchOnSaleGoodsRsq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.SearchOnSaleGoodsRsq.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .myApplication.SearchOnSaleGoodsRsq.goods good = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_good(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchOnSaleGoodsRsq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.SearchOnSaleGoodsRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.SearchOnSaleGoodsRsq.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .myApplication.SearchOnSaleGoodsRsq.goods good = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_good_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_good(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.SearchOnSaleGoodsRsq)
  return target;
}

size_t SearchOnSaleGoodsRsq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.SearchOnSaleGoodsRsq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .myApplication.SearchOnSaleGoodsRsq.goods good = 3;
  total_size += 1UL * this->_internal_good_size();
  for (const auto& msg : this->good_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchOnSaleGoodsRsq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchOnSaleGoodsRsq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchOnSaleGoodsRsq::GetClassData() const { return &_class_data_; }

void SearchOnSaleGoodsRsq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchOnSaleGoodsRsq *>(to)->MergeFrom(
      static_cast<const SearchOnSaleGoodsRsq &>(from));
}


void SearchOnSaleGoodsRsq::MergeFrom(const SearchOnSaleGoodsRsq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.SearchOnSaleGoodsRsq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  good_.MergeFrom(from.good_);
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchOnSaleGoodsRsq::CopyFrom(const SearchOnSaleGoodsRsq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.SearchOnSaleGoodsRsq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchOnSaleGoodsRsq::IsInitialized() const {
  return true;
}

void SearchOnSaleGoodsRsq::InternalSwap(SearchOnSaleGoodsRsq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  good_.InternalSwap(&other->good_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchOnSaleGoodsRsq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[2]);
}

// ===================================================================

class ListSpecialGoodReq::_Internal {
 public:
};

ListSpecialGoodReq::ListSpecialGoodReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ListSpecialGoodReq)
}
ListSpecialGoodReq::ListSpecialGoodReq(const ListSpecialGoodReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  specailnum_ = from.specailnum_;
  // @@protoc_insertion_point(copy_constructor:myApplication.ListSpecialGoodReq)
}

void ListSpecialGoodReq::SharedCtor() {
specailnum_ = 0;
}

ListSpecialGoodReq::~ListSpecialGoodReq() {
  // @@protoc_insertion_point(destructor:myApplication.ListSpecialGoodReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSpecialGoodReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ListSpecialGoodReq::ArenaDtor(void* object) {
  ListSpecialGoodReq* _this = reinterpret_cast< ListSpecialGoodReq* >(object);
  (void)_this;
}
void ListSpecialGoodReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSpecialGoodReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSpecialGoodReq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ListSpecialGoodReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  specailnum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSpecialGoodReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 SpecailNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          specailnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpecialGoodReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ListSpecialGoodReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 SpecailNum = 1;
  if (this->_internal_specailnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_specailnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ListSpecialGoodReq)
  return target;
}

size_t ListSpecialGoodReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ListSpecialGoodReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 SpecailNum = 1;
  if (this->_internal_specailnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_specailnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSpecialGoodReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSpecialGoodReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSpecialGoodReq::GetClassData() const { return &_class_data_; }

void ListSpecialGoodReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSpecialGoodReq *>(to)->MergeFrom(
      static_cast<const ListSpecialGoodReq &>(from));
}


void ListSpecialGoodReq::MergeFrom(const ListSpecialGoodReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ListSpecialGoodReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_specailnum() != 0) {
    _internal_set_specailnum(from._internal_specailnum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSpecialGoodReq::CopyFrom(const ListSpecialGoodReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ListSpecialGoodReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpecialGoodReq::IsInitialized() const {
  return true;
}

void ListSpecialGoodReq::InternalSwap(ListSpecialGoodReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(specailnum_, other->specailnum_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpecialGoodReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[3]);
}

// ===================================================================

class ListSpecialGoodRsq_goods::_Internal {
 public:
};

ListSpecialGoodRsq_goods::ListSpecialGoodRsq_goods(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ListSpecialGoodRsq.goods)
}
ListSpecialGoodRsq_goods::ListSpecialGoodRsq_goods(const ListSpecialGoodRsq_goods& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_goodname().empty()) {
    goodname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_goodname(), 
      GetArenaForAllocation());
  }
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:myApplication.ListSpecialGoodRsq.goods)
}

void ListSpecialGoodRsq_goods::SharedCtor() {
goodname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goodid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(userid_));
}

ListSpecialGoodRsq_goods::~ListSpecialGoodRsq_goods() {
  // @@protoc_insertion_point(destructor:myApplication.ListSpecialGoodRsq.goods)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSpecialGoodRsq_goods::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  goodname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSpecialGoodRsq_goods::ArenaDtor(void* object) {
  ListSpecialGoodRsq_goods* _this = reinterpret_cast< ListSpecialGoodRsq_goods* >(object);
  (void)_this;
}
void ListSpecialGoodRsq_goods::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSpecialGoodRsq_goods::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSpecialGoodRsq_goods::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ListSpecialGoodRsq.goods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  goodname_.ClearToEmpty();
  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(userid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSpecialGoodRsq_goods::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 goodid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string goodname = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_goodname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.ListSpecialGoodRsq.goods.goodname"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 tradeAmount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tradeamount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 userid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpecialGoodRsq_goods::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ListSpecialGoodRsq.goods)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_goodid(), target);
  }

  // string goodname = 2;
  if (!this->_internal_goodname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_goodname().data(), static_cast<int>(this->_internal_goodname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.ListSpecialGoodRsq.goods.goodname");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_goodname(), target);
  }

  // int64 tradeAmount = 3;
  if (this->_internal_tradeamount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_tradeamount(), target);
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_userid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ListSpecialGoodRsq.goods)
  return target;
}

size_t ListSpecialGoodRsq_goods::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ListSpecialGoodRsq.goods)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string goodname = 2;
  if (!this->_internal_goodname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_goodname());
  }

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  // int64 tradeAmount = 3;
  if (this->_internal_tradeamount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_tradeamount());
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_userid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSpecialGoodRsq_goods::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSpecialGoodRsq_goods::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSpecialGoodRsq_goods::GetClassData() const { return &_class_data_; }

void ListSpecialGoodRsq_goods::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSpecialGoodRsq_goods *>(to)->MergeFrom(
      static_cast<const ListSpecialGoodRsq_goods &>(from));
}


void ListSpecialGoodRsq_goods::MergeFrom(const ListSpecialGoodRsq_goods& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ListSpecialGoodRsq.goods)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_goodname().empty()) {
    _internal_set_goodname(from._internal_goodname());
  }
  if (from._internal_goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from._internal_tradeamount() != 0) {
    _internal_set_tradeamount(from._internal_tradeamount());
  }
  if (from._internal_userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSpecialGoodRsq_goods::CopyFrom(const ListSpecialGoodRsq_goods& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ListSpecialGoodRsq.goods)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpecialGoodRsq_goods::IsInitialized() const {
  return true;
}

void ListSpecialGoodRsq_goods::InternalSwap(ListSpecialGoodRsq_goods* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &goodname_, lhs_arena,
      &other->goodname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ListSpecialGoodRsq_goods, userid_)
      + sizeof(ListSpecialGoodRsq_goods::userid_)
      - PROTOBUF_FIELD_OFFSET(ListSpecialGoodRsq_goods, goodid_)>(
          reinterpret_cast<char*>(&goodid_),
          reinterpret_cast<char*>(&other->goodid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpecialGoodRsq_goods::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[4]);
}

// ===================================================================

class ListSpecialGoodRsq::_Internal {
 public:
};

ListSpecialGoodRsq::ListSpecialGoodRsq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  good_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ListSpecialGoodRsq)
}
ListSpecialGoodRsq::ListSpecialGoodRsq(const ListSpecialGoodRsq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      good_(from.good_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:myApplication.ListSpecialGoodRsq)
}

void ListSpecialGoodRsq::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = 0;
}

ListSpecialGoodRsq::~ListSpecialGoodRsq() {
  // @@protoc_insertion_point(destructor:myApplication.ListSpecialGoodRsq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ListSpecialGoodRsq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ListSpecialGoodRsq::ArenaDtor(void* object) {
  ListSpecialGoodRsq* _this = reinterpret_cast< ListSpecialGoodRsq* >(object);
  (void)_this;
}
void ListSpecialGoodRsq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ListSpecialGoodRsq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ListSpecialGoodRsq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ListSpecialGoodRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  good_.Clear();
  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ListSpecialGoodRsq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.ListSpecialGoodRsq.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .myApplication.ListSpecialGoodRsq.goods good = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_good(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListSpecialGoodRsq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ListSpecialGoodRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.ListSpecialGoodRsq.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .myApplication.ListSpecialGoodRsq.goods good = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_good_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_good(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ListSpecialGoodRsq)
  return target;
}

size_t ListSpecialGoodRsq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ListSpecialGoodRsq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .myApplication.ListSpecialGoodRsq.goods good = 3;
  total_size += 1UL * this->_internal_good_size();
  for (const auto& msg : this->good_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ListSpecialGoodRsq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ListSpecialGoodRsq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ListSpecialGoodRsq::GetClassData() const { return &_class_data_; }

void ListSpecialGoodRsq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ListSpecialGoodRsq *>(to)->MergeFrom(
      static_cast<const ListSpecialGoodRsq &>(from));
}


void ListSpecialGoodRsq::MergeFrom(const ListSpecialGoodRsq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ListSpecialGoodRsq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  good_.MergeFrom(from.good_);
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ListSpecialGoodRsq::CopyFrom(const ListSpecialGoodRsq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ListSpecialGoodRsq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListSpecialGoodRsq::IsInitialized() const {
  return true;
}

void ListSpecialGoodRsq::InternalSwap(ListSpecialGoodRsq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  good_.InternalSwap(&other->good_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListSpecialGoodRsq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[5]);
}

// ===================================================================

class PurchaseReq::_Internal {
 public:
};

PurchaseReq::PurchaseReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.PurchaseReq)
}
PurchaseReq::PurchaseReq(const PurchaseReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&goodspecial_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
  // @@protoc_insertion_point(copy_constructor:myApplication.PurchaseReq)
}

void PurchaseReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goodid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&goodspecial_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
}

PurchaseReq::~PurchaseReq() {
  // @@protoc_insertion_point(destructor:myApplication.PurchaseReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PurchaseReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PurchaseReq::ArenaDtor(void* object) {
  PurchaseReq* _this = reinterpret_cast< PurchaseReq* >(object);
  (void)_this;
}
void PurchaseReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurchaseReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PurchaseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.PurchaseReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goodspecial_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurchaseReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 goodid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 money = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          money_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 goodSpecial = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          goodspecial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 salerid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          salerid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurchaseReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.PurchaseReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_goodid(), target);
  }

  // int64 money = 2;
  if (this->_internal_money() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_money(), target);
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_id(), target);
  }

  // int64 num = 4;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_num(), target);
  }

  // int32 goodSpecial = 5;
  if (this->_internal_goodspecial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_goodspecial(), target);
  }

  // int64 salerid = 6;
  if (this->_internal_salerid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_salerid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.PurchaseReq)
  return target;
}

size_t PurchaseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.PurchaseReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  // int64 money = 2;
  if (this->_internal_money() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_money());
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int64 num = 4;
  if (this->_internal_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num());
  }

  // int64 salerid = 6;
  if (this->_internal_salerid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_salerid());
  }

  // int32 goodSpecial = 5;
  if (this->_internal_goodspecial() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_goodspecial());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PurchaseReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PurchaseReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PurchaseReq::GetClassData() const { return &_class_data_; }

void PurchaseReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PurchaseReq *>(to)->MergeFrom(
      static_cast<const PurchaseReq &>(from));
}


void PurchaseReq::MergeFrom(const PurchaseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.PurchaseReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from._internal_money() != 0) {
    _internal_set_money(from._internal_money());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from._internal_salerid() != 0) {
    _internal_set_salerid(from._internal_salerid());
  }
  if (from._internal_goodspecial() != 0) {
    _internal_set_goodspecial(from._internal_goodspecial());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PurchaseReq::CopyFrom(const PurchaseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.PurchaseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseReq::IsInitialized() const {
  return true;
}

void PurchaseReq::InternalSwap(PurchaseReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PurchaseReq, goodspecial_)
      + sizeof(PurchaseReq::goodspecial_)
      - PROTOBUF_FIELD_OFFSET(PurchaseReq, goodid_)>(
          reinterpret_cast<char*>(&goodid_),
          reinterpret_cast<char*>(&other->goodid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PurchaseReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[6]);
}

// ===================================================================

class PurchaseRsq::_Internal {
 public:
};

PurchaseRsq::PurchaseRsq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.PurchaseRsq)
}
PurchaseRsq::PurchaseRsq(const PurchaseRsq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:myApplication.PurchaseRsq)
}

void PurchaseRsq::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = 0;
}

PurchaseRsq::~PurchaseRsq() {
  // @@protoc_insertion_point(destructor:myApplication.PurchaseRsq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PurchaseRsq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PurchaseRsq::ArenaDtor(void* object) {
  PurchaseRsq* _this = reinterpret_cast< PurchaseRsq* >(object);
  (void)_this;
}
void PurchaseRsq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurchaseRsq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PurchaseRsq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.PurchaseRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurchaseRsq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.PurchaseRsq.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurchaseRsq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.PurchaseRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.PurchaseRsq.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.PurchaseRsq)
  return target;
}

size_t PurchaseRsq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.PurchaseRsq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PurchaseRsq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PurchaseRsq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PurchaseRsq::GetClassData() const { return &_class_data_; }

void PurchaseRsq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PurchaseRsq *>(to)->MergeFrom(
      static_cast<const PurchaseRsq &>(from));
}


void PurchaseRsq::MergeFrom(const PurchaseRsq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.PurchaseRsq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PurchaseRsq::CopyFrom(const PurchaseRsq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.PurchaseRsq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurchaseRsq::IsInitialized() const {
  return true;
}

void PurchaseRsq::InternalSwap(PurchaseRsq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PurchaseRsq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[7]);
}

// ===================================================================

class ManageTradesReq::_Internal {
 public:
  using HasBits = decltype(std::declval<ManageTradesReq>()._has_bits_);
  static void set_has_goodid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ManageTradesReq::ManageTradesReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ManageTradesReq)
}
ManageTradesReq::ManageTradesReq(const ManageTradesReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&goodid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(goodid_));
  // @@protoc_insertion_point(copy_constructor:myApplication.ManageTradesReq)
}

void ManageTradesReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&userid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&goodid_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(goodid_));
}

ManageTradesReq::~ManageTradesReq() {
  // @@protoc_insertion_point(destructor:myApplication.ManageTradesReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ManageTradesReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ManageTradesReq::ArenaDtor(void* object) {
  ManageTradesReq* _this = reinterpret_cast< ManageTradesReq* >(object);
  (void)_this;
}
void ManageTradesReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ManageTradesReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ManageTradesReq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ManageTradesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  userid_ = int64_t{0};
  goodid_ = int64_t{0};
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageTradesReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 userid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional int64 goodid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_goodid(&has_bits);
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ManageTradesReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ManageTradesReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_userid(), target);
  }

  // optional int64 goodid = 2;
  if (_internal_has_goodid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_goodid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ManageTradesReq)
  return target;
}

size_t ManageTradesReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ManageTradesReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 userid = 1;
  if (this->_internal_userid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_userid());
  }

  // optional int64 goodid = 2;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageTradesReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ManageTradesReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageTradesReq::GetClassData() const { return &_class_data_; }

void ManageTradesReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ManageTradesReq *>(to)->MergeFrom(
      static_cast<const ManageTradesReq &>(from));
}


void ManageTradesReq::MergeFrom(const ManageTradesReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ManageTradesReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from._internal_has_goodid()) {
    _internal_set_goodid(from._internal_goodid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageTradesReq::CopyFrom(const ManageTradesReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ManageTradesReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageTradesReq::IsInitialized() const {
  return true;
}

void ManageTradesReq::InternalSwap(ManageTradesReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManageTradesReq, goodid_)
      + sizeof(ManageTradesReq::goodid_)
      - PROTOBUF_FIELD_OFFSET(ManageTradesReq, userid_)>(
          reinterpret_cast<char*>(&userid_),
          reinterpret_cast<char*>(&other->userid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageTradesReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[8]);
}

// ===================================================================

class ManageTradesRsq_trade::_Internal {
 public:
};

ManageTradesRsq_trade::ManageTradesRsq_trade(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ManageTradesRsq.trade)
}
ManageTradesRsq_trade::ManageTradesRsq_trade(const ManageTradesRsq_trade& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tradetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tradetime().empty()) {
    tradetime_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tradetime(), 
      GetArenaForAllocation());
  }
  ::memcpy(&tradeid_, &from.tradeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&tradeid_)) + sizeof(kind_));
  // @@protoc_insertion_point(copy_constructor:myApplication.ManageTradesRsq.trade)
}

void ManageTradesRsq_trade::SharedCtor() {
tradetime_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tradeid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&kind_) -
    reinterpret_cast<char*>(&tradeid_)) + sizeof(kind_));
}

ManageTradesRsq_trade::~ManageTradesRsq_trade() {
  // @@protoc_insertion_point(destructor:myApplication.ManageTradesRsq.trade)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ManageTradesRsq_trade::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tradetime_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManageTradesRsq_trade::ArenaDtor(void* object) {
  ManageTradesRsq_trade* _this = reinterpret_cast< ManageTradesRsq_trade* >(object);
  (void)_this;
}
void ManageTradesRsq_trade::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ManageTradesRsq_trade::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ManageTradesRsq_trade::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ManageTradesRsq.trade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tradetime_.ClearToEmpty();
  ::memset(&tradeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&kind_) -
      reinterpret_cast<char*>(&tradeid_)) + sizeof(kind_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageTradesRsq_trade::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 tradeid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tradeid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 kind = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 goodid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 userid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string tradeTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_tradetime();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.ManageTradesRsq.trade.tradeTime"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 tradeMoney = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          trademoney_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ManageTradesRsq_trade::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ManageTradesRsq.trade)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tradeid = 1;
  if (this->_internal_tradeid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tradeid(), target);
  }

  // int32 kind = 2;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_kind(), target);
  }

  // int64 goodid = 3;
  if (this->_internal_goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_goodid(), target);
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_userid(), target);
  }

  // string tradeTime = 5;
  if (!this->_internal_tradetime().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tradetime().data(), static_cast<int>(this->_internal_tradetime().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.ManageTradesRsq.trade.tradeTime");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_tradetime(), target);
  }

  // int64 tradeMoney = 6;
  if (this->_internal_trademoney() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_trademoney(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ManageTradesRsq.trade)
  return target;
}

size_t ManageTradesRsq_trade::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ManageTradesRsq.trade)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tradeTime = 5;
  if (!this->_internal_tradetime().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tradetime());
  }

  // int64 tradeid = 1;
  if (this->_internal_tradeid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_tradeid());
  }

  // int64 goodid = 3;
  if (this->_internal_goodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  // int64 userid = 4;
  if (this->_internal_userid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_userid());
  }

  // int64 tradeMoney = 6;
  if (this->_internal_trademoney() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_trademoney());
  }

  // int32 kind = 2;
  if (this->_internal_kind() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_kind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageTradesRsq_trade::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ManageTradesRsq_trade::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageTradesRsq_trade::GetClassData() const { return &_class_data_; }

void ManageTradesRsq_trade::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ManageTradesRsq_trade *>(to)->MergeFrom(
      static_cast<const ManageTradesRsq_trade &>(from));
}


void ManageTradesRsq_trade::MergeFrom(const ManageTradesRsq_trade& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ManageTradesRsq.trade)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tradetime().empty()) {
    _internal_set_tradetime(from._internal_tradetime());
  }
  if (from._internal_tradeid() != 0) {
    _internal_set_tradeid(from._internal_tradeid());
  }
  if (from._internal_goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from._internal_userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  if (from._internal_trademoney() != 0) {
    _internal_set_trademoney(from._internal_trademoney());
  }
  if (from._internal_kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageTradesRsq_trade::CopyFrom(const ManageTradesRsq_trade& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ManageTradesRsq.trade)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageTradesRsq_trade::IsInitialized() const {
  return true;
}

void ManageTradesRsq_trade::InternalSwap(ManageTradesRsq_trade* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tradetime_, lhs_arena,
      &other->tradetime_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ManageTradesRsq_trade, kind_)
      + sizeof(ManageTradesRsq_trade::kind_)
      - PROTOBUF_FIELD_OFFSET(ManageTradesRsq_trade, tradeid_)>(
          reinterpret_cast<char*>(&tradeid_),
          reinterpret_cast<char*>(&other->tradeid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageTradesRsq_trade::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[9]);
}

// ===================================================================

class ManageTradesRsq::_Internal {
 public:
};

ManageTradesRsq::ManageTradesRsq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  trades_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.ManageTradesRsq)
}
ManageTradesRsq::ManageTradesRsq(const ManageTradesRsq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      trades_(from.trades_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:myApplication.ManageTradesRsq)
}

void ManageTradesRsq::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = 0;
}

ManageTradesRsq::~ManageTradesRsq() {
  // @@protoc_insertion_point(destructor:myApplication.ManageTradesRsq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ManageTradesRsq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ManageTradesRsq::ArenaDtor(void* object) {
  ManageTradesRsq* _this = reinterpret_cast< ManageTradesRsq* >(object);
  (void)_this;
}
void ManageTradesRsq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ManageTradesRsq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ManageTradesRsq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.ManageTradesRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  trades_.Clear();
  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ManageTradesRsq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.ManageTradesRsq.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .myApplication.ManageTradesRsq.trade trades = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_trades(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ManageTradesRsq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.ManageTradesRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.ManageTradesRsq.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  // repeated .myApplication.ManageTradesRsq.trade trades = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_trades_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_trades(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.ManageTradesRsq)
  return target;
}

size_t ManageTradesRsq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.ManageTradesRsq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .myApplication.ManageTradesRsq.trade trades = 3;
  total_size += 1UL * this->_internal_trades_size();
  for (const auto& msg : this->trades_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ManageTradesRsq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ManageTradesRsq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ManageTradesRsq::GetClassData() const { return &_class_data_; }

void ManageTradesRsq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ManageTradesRsq *>(to)->MergeFrom(
      static_cast<const ManageTradesRsq &>(from));
}


void ManageTradesRsq::MergeFrom(const ManageTradesRsq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.ManageTradesRsq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  trades_.MergeFrom(from.trades_);
  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ManageTradesRsq::CopyFrom(const ManageTradesRsq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.ManageTradesRsq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManageTradesRsq::IsInitialized() const {
  return true;
}

void ManageTradesRsq::InternalSwap(ManageTradesRsq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  trades_.InternalSwap(&other->trades_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ManageTradesRsq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[10]);
}

// ===================================================================

class SaleReq::_Internal {
 public:
};

SaleReq::SaleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.SaleReq)
}
SaleReq::SaleReq(const SaleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&goodid_, &from.goodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&goodspecial_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
  // @@protoc_insertion_point(copy_constructor:myApplication.SaleReq)
}

void SaleReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&goodid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&goodspecial_) -
    reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
}

SaleReq::~SaleReq() {
  // @@protoc_insertion_point(destructor:myApplication.SaleReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SaleReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SaleReq::ArenaDtor(void* object) {
  SaleReq* _this = reinterpret_cast< SaleReq* >(object);
  (void)_this;
}
void SaleReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SaleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.SaleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&goodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&goodspecial_) -
      reinterpret_cast<char*>(&goodid_)) + sizeof(goodspecial_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaleReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 goodid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          goodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 money = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          money_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 kind = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          kind_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 goodSpecial = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          goodspecial_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaleReq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.SaleReq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_goodid(), target);
  }

  // int64 money = 2;
  if (this->_internal_money() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_money(), target);
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_id(), target);
  }

  // int32 kind = 4;
  if (this->_internal_kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_kind(), target);
  }

  // int64 num = 5;
  if (this->_internal_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_num(), target);
  }

  // int32 goodSpecial = 6;
  if (this->_internal_goodspecial() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_goodspecial(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.SaleReq)
  return target;
}

size_t SaleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.SaleReq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 goodid = 1;
  if (this->_internal_goodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_goodid());
  }

  // int64 money = 2;
  if (this->_internal_money() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_money());
  }

  // int64 id = 3;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_id());
  }

  // int64 num = 5;
  if (this->_internal_num() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num());
  }

  // int32 kind = 4;
  if (this->_internal_kind() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_kind());
  }

  // int32 goodSpecial = 6;
  if (this->_internal_goodspecial() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_goodspecial());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaleReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SaleReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaleReq::GetClassData() const { return &_class_data_; }

void SaleReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SaleReq *>(to)->MergeFrom(
      static_cast<const SaleReq &>(from));
}


void SaleReq::MergeFrom(const SaleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.SaleReq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_goodid() != 0) {
    _internal_set_goodid(from._internal_goodid());
  }
  if (from._internal_money() != 0) {
    _internal_set_money(from._internal_money());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_num() != 0) {
    _internal_set_num(from._internal_num());
  }
  if (from._internal_kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
  if (from._internal_goodspecial() != 0) {
    _internal_set_goodspecial(from._internal_goodspecial());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaleReq::CopyFrom(const SaleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.SaleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaleReq::IsInitialized() const {
  return true;
}

void SaleReq::InternalSwap(SaleReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SaleReq, goodspecial_)
      + sizeof(SaleReq::goodspecial_)
      - PROTOBUF_FIELD_OFFSET(SaleReq, goodid_)>(
          reinterpret_cast<char*>(&goodid_),
          reinterpret_cast<char*>(&other->goodid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SaleReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[11]);
}

// ===================================================================

class SaleRsq::_Internal {
 public:
};

SaleRsq::SaleRsq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:myApplication.SaleRsq)
}
SaleRsq::SaleRsq(const SaleRsq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArenaForAllocation());
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:myApplication.SaleRsq)
}

void SaleRsq::SharedCtor() {
message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
status_ = 0;
}

SaleRsq::~SaleRsq() {
  // @@protoc_insertion_point(destructor:myApplication.SaleRsq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SaleRsq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SaleRsq::ArenaDtor(void* object) {
  SaleRsq* _this = reinterpret_cast< SaleRsq* >(object);
  (void)_this;
}
void SaleRsq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SaleRsq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SaleRsq::Clear() {
// @@protoc_insertion_point(message_clear_start:myApplication.SaleRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  status_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SaleRsq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "myApplication.SaleRsq.message"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SaleRsq::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:myApplication.SaleRsq)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_status(), target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "myApplication.SaleRsq.message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:myApplication.SaleRsq)
  return target;
}

size_t SaleRsq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:myApplication.SaleRsq)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // int32 status = 1;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SaleRsq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SaleRsq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SaleRsq::GetClassData() const { return &_class_data_; }

void SaleRsq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SaleRsq *>(to)->MergeFrom(
      static_cast<const SaleRsq &>(from));
}


void SaleRsq::MergeFrom(const SaleRsq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:myApplication.SaleRsq)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SaleRsq::CopyFrom(const SaleRsq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:myApplication.SaleRsq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SaleRsq::IsInitialized() const {
  return true;
}

void SaleRsq::InternalSwap(SaleRsq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &message_, lhs_arena,
      &other->message_, rhs_arena
  );
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SaleRsq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_MallService_2eproto_getter, &descriptor_table_MallService_2eproto_once,
      file_level_metadata_MallService_2eproto[12]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace myApplication
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::myApplication::SearchOnSaleGoodsReq* Arena::CreateMaybeMessage< ::myApplication::SearchOnSaleGoodsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::SearchOnSaleGoodsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::SearchOnSaleGoodsRsq_goods* Arena::CreateMaybeMessage< ::myApplication::SearchOnSaleGoodsRsq_goods >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::SearchOnSaleGoodsRsq_goods >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::SearchOnSaleGoodsRsq* Arena::CreateMaybeMessage< ::myApplication::SearchOnSaleGoodsRsq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::SearchOnSaleGoodsRsq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ListSpecialGoodReq* Arena::CreateMaybeMessage< ::myApplication::ListSpecialGoodReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ListSpecialGoodReq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ListSpecialGoodRsq_goods* Arena::CreateMaybeMessage< ::myApplication::ListSpecialGoodRsq_goods >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ListSpecialGoodRsq_goods >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ListSpecialGoodRsq* Arena::CreateMaybeMessage< ::myApplication::ListSpecialGoodRsq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ListSpecialGoodRsq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::PurchaseReq* Arena::CreateMaybeMessage< ::myApplication::PurchaseReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::PurchaseReq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::PurchaseRsq* Arena::CreateMaybeMessage< ::myApplication::PurchaseRsq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::PurchaseRsq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ManageTradesReq* Arena::CreateMaybeMessage< ::myApplication::ManageTradesReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ManageTradesReq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ManageTradesRsq_trade* Arena::CreateMaybeMessage< ::myApplication::ManageTradesRsq_trade >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ManageTradesRsq_trade >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::ManageTradesRsq* Arena::CreateMaybeMessage< ::myApplication::ManageTradesRsq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::ManageTradesRsq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::SaleReq* Arena::CreateMaybeMessage< ::myApplication::SaleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::SaleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::myApplication::SaleRsq* Arena::CreateMaybeMessage< ::myApplication::SaleRsq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::myApplication::SaleRsq >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
