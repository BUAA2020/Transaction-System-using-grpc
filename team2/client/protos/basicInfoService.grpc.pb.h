// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: basicInfoService.proto
#ifndef GRPC_basicInfoService_2eproto__INCLUDED
#define GRPC_basicInfoService_2eproto__INCLUDED

#include "basicInfoService.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace myApplication {

class BasicInfoService final {
 public:
  static constexpr char const* service_full_name() {
    return "myApplication.BasicInfoService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::myApplication::loginRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>> AsyncdoLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>>(AsyncdoLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>> PrepareAsyncdoLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>>(PrepareAsyncdoLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::myApplication::registerRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>> AsyncdoRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>>(AsyncdoRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>> PrepareAsyncdoRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>>(PrepareAsyncdoRegisterRaw(context, request, cq));
    }
    virtual ::grpc::Status doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::myApplication::modifyUserRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>> AsyncdoModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>>(AsyncdoModifyUserInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>> PrepareAsyncdoModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>>(PrepareAsyncdoModifyUserInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::myApplication::searchUserRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>> AsyncdoSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>>(AsyncdoSearchUserInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>> PrepareAsyncdoSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>>(PrepareAsyncdoSearchUserInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::myApplication::modifyGoodRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>> AsyncdoModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>>(AsyncdoModifyGoodInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>> PrepareAsyncdoModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>>(PrepareAsyncdoModifyGoodInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::myApplication::searchGoodRsq* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>> AsyncdoSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>>(AsyncdoSearchGoodInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>> PrepareAsyncdoSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>>(PrepareAsyncdoSearchGoodInfoRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response, std::function<void(::grpc::Status)>) = 0;
      virtual void doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>* AsyncdoLoginRaw(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::loginRsq>* PrepareAsyncdoLoginRaw(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>* AsyncdoRegisterRaw(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::registerRsq>* PrepareAsyncdoRegisterRaw(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>* AsyncdoModifyUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyUserRsq>* PrepareAsyncdoModifyUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>* AsyncdoSearchUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchUserRsq>* PrepareAsyncdoSearchUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>* AsyncdoModifyGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::modifyGoodRsq>* PrepareAsyncdoModifyGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>* AsyncdoSearchGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::myApplication::searchGoodRsq>* PrepareAsyncdoSearchGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::myApplication::loginRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>> AsyncdoLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>>(AsyncdoLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>> PrepareAsyncdoLogin(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>>(PrepareAsyncdoLoginRaw(context, request, cq));
    }
    ::grpc::Status doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::myApplication::registerRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>> AsyncdoRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>>(AsyncdoRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>> PrepareAsyncdoRegister(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>>(PrepareAsyncdoRegisterRaw(context, request, cq));
    }
    ::grpc::Status doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::myApplication::modifyUserRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>> AsyncdoModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>>(AsyncdoModifyUserInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>> PrepareAsyncdoModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>>(PrepareAsyncdoModifyUserInfoRaw(context, request, cq));
    }
    ::grpc::Status doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::myApplication::searchUserRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>> AsyncdoSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>>(AsyncdoSearchUserInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>> PrepareAsyncdoSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>>(PrepareAsyncdoSearchUserInfoRaw(context, request, cq));
    }
    ::grpc::Status doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::myApplication::modifyGoodRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>> AsyncdoModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>>(AsyncdoModifyGoodInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>> PrepareAsyncdoModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>>(PrepareAsyncdoModifyGoodInfoRaw(context, request, cq));
    }
    ::grpc::Status doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::myApplication::searchGoodRsq* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>> AsyncdoSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>>(AsyncdoSearchGoodInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>> PrepareAsyncdoSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>>(PrepareAsyncdoSearchGoodInfoRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response, std::function<void(::grpc::Status)>) override;
      void doLogin(::grpc::ClientContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response, std::function<void(::grpc::Status)>) override;
      void doRegister(::grpc::ClientContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response, std::function<void(::grpc::Status)>) override;
      void doModifyUserInfo(::grpc::ClientContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response, std::function<void(::grpc::Status)>) override;
      void doSearchUserInfo(::grpc::ClientContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response, std::function<void(::grpc::Status)>) override;
      void doModifyGoodInfo(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
      void doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response, std::function<void(::grpc::Status)>) override;
      void doSearchGoodInfo(::grpc::ClientContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>* AsyncdoLoginRaw(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::loginRsq>* PrepareAsyncdoLoginRaw(::grpc::ClientContext* context, const ::myApplication::loginReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>* AsyncdoRegisterRaw(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::registerRsq>* PrepareAsyncdoRegisterRaw(::grpc::ClientContext* context, const ::myApplication::registerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>* AsyncdoModifyUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::modifyUserRsq>* PrepareAsyncdoModifyUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>* AsyncdoSearchUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::searchUserRsq>* PrepareAsyncdoSearchUserInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>* AsyncdoModifyGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::modifyGoodRsq>* PrepareAsyncdoModifyGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::modifyGoodReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>* AsyncdoSearchGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::myApplication::searchGoodRsq>* PrepareAsyncdoSearchGoodInfoRaw(::grpc::ClientContext* context, const ::myApplication::searchGoodReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_doLogin_;
    const ::grpc::internal::RpcMethod rpcmethod_doRegister_;
    const ::grpc::internal::RpcMethod rpcmethod_doModifyUserInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_doSearchUserInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_doModifyGoodInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_doSearchGoodInfo_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status doLogin(::grpc::ServerContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response);
    virtual ::grpc::Status doRegister(::grpc::ServerContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response);
    virtual ::grpc::Status doModifyUserInfo(::grpc::ServerContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response);
    virtual ::grpc::Status doSearchUserInfo(::grpc::ServerContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response);
    virtual ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response);
    virtual ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doLogin() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoLogin(::grpc::ServerContext* context, ::myApplication::loginReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::loginRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doRegister() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoRegister(::grpc::ServerContext* context, ::myApplication::registerReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::registerRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoModifyUserInfo(::grpc::ServerContext* context, ::myApplication::modifyUserReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::modifyUserRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchUserInfo(::grpc::ServerContext* context, ::myApplication::searchUserReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::searchUserRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoModifyGoodInfo(::grpc::ServerContext* context, ::myApplication::modifyGoodReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::modifyGoodRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchGoodInfo(::grpc::ServerContext* context, ::myApplication::searchGoodReq* request, ::grpc::ServerAsyncResponseWriter< ::myApplication::searchGoodRsq>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_doLogin<WithAsyncMethod_doRegister<WithAsyncMethod_doModifyUserInfo<WithAsyncMethod_doSearchUserInfo<WithAsyncMethod_doModifyGoodInfo<WithAsyncMethod_doSearchGoodInfo<Service > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doLogin() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::loginReq, ::myApplication::loginRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::loginReq* request, ::myApplication::loginRsq* response) { return this->doLogin(context, request, response); }));}
    void SetMessageAllocatorFor_doLogin(
        ::grpc::MessageAllocator< ::myApplication::loginReq, ::myApplication::loginRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::loginReq, ::myApplication::loginRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doRegister() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::registerReq, ::myApplication::registerRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::registerReq* request, ::myApplication::registerRsq* response) { return this->doRegister(context, request, response); }));}
    void SetMessageAllocatorFor_doRegister(
        ::grpc::MessageAllocator< ::myApplication::registerReq, ::myApplication::registerRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::registerReq, ::myApplication::registerRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doRegister(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::modifyUserReq, ::myApplication::modifyUserRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::modifyUserReq* request, ::myApplication::modifyUserRsq* response) { return this->doModifyUserInfo(context, request, response); }));}
    void SetMessageAllocatorFor_doModifyUserInfo(
        ::grpc::MessageAllocator< ::myApplication::modifyUserReq, ::myApplication::modifyUserRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::modifyUserReq, ::myApplication::modifyUserRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doModifyUserInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::searchUserReq, ::myApplication::searchUserRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::searchUserReq* request, ::myApplication::searchUserRsq* response) { return this->doSearchUserInfo(context, request, response); }));}
    void SetMessageAllocatorFor_doSearchUserInfo(
        ::grpc::MessageAllocator< ::myApplication::searchUserReq, ::myApplication::searchUserRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::searchUserReq, ::myApplication::searchUserRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchUserInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::modifyGoodReq, ::myApplication::modifyGoodRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::modifyGoodReq* request, ::myApplication::modifyGoodRsq* response) { return this->doModifyGoodInfo(context, request, response); }));}
    void SetMessageAllocatorFor_doModifyGoodInfo(
        ::grpc::MessageAllocator< ::myApplication::modifyGoodReq, ::myApplication::modifyGoodRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::modifyGoodReq, ::myApplication::modifyGoodRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doModifyGoodInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::myApplication::searchGoodReq, ::myApplication::searchGoodRsq>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::myApplication::searchGoodReq* request, ::myApplication::searchGoodRsq* response) { return this->doSearchGoodInfo(context, request, response); }));}
    void SetMessageAllocatorFor_doSearchGoodInfo(
        ::grpc::MessageAllocator< ::myApplication::searchGoodReq, ::myApplication::searchGoodRsq>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::myApplication::searchGoodReq, ::myApplication::searchGoodRsq>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchGoodInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_doLogin<WithCallbackMethod_doRegister<WithCallbackMethod_doModifyUserInfo<WithCallbackMethod_doSearchUserInfo<WithCallbackMethod_doModifyGoodInfo<WithCallbackMethod_doSearchGoodInfo<Service > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doLogin() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doRegister() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doLogin() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doRegister() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoRegister(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoModifyUserInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchUserInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoModifyGoodInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestdoSearchGoodInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doLogin() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doLogin(context, request, response); }));
    }
    ~WithRawCallbackMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doRegister() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doRegister(context, request, response); }));
    }
    ~WithRawCallbackMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doRegister(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doModifyUserInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doModifyUserInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doSearchUserInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchUserInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doModifyGoodInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doModifyGoodInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->doSearchGoodInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* doSearchGoodInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doLogin() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::loginReq, ::myApplication::loginRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::loginReq, ::myApplication::loginRsq>* streamer) {
                       return this->StreameddoLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doLogin(::grpc::ServerContext* /*context*/, const ::myApplication::loginReq* /*request*/, ::myApplication::loginRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::loginReq,::myApplication::loginRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doRegister() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::registerReq, ::myApplication::registerRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::registerReq, ::myApplication::registerRsq>* streamer) {
                       return this->StreameddoRegister(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doRegister(::grpc::ServerContext* /*context*/, const ::myApplication::registerReq* /*request*/, ::myApplication::registerRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoRegister(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::registerReq,::myApplication::registerRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doModifyUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doModifyUserInfo() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::modifyUserReq, ::myApplication::modifyUserRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::modifyUserReq, ::myApplication::modifyUserRsq>* streamer) {
                       return this->StreameddoModifyUserInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doModifyUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doModifyUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyUserReq* /*request*/, ::myApplication::modifyUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoModifyUserInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::modifyUserReq,::myApplication::modifyUserRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doSearchUserInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doSearchUserInfo() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::searchUserReq, ::myApplication::searchUserRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::searchUserReq, ::myApplication::searchUserRsq>* streamer) {
                       return this->StreameddoSearchUserInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doSearchUserInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doSearchUserInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchUserReq* /*request*/, ::myApplication::searchUserRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoSearchUserInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::searchUserReq,::myApplication::searchUserRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doModifyGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doModifyGoodInfo() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::modifyGoodReq, ::myApplication::modifyGoodRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::modifyGoodReq, ::myApplication::modifyGoodRsq>* streamer) {
                       return this->StreameddoModifyGoodInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doModifyGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doModifyGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::modifyGoodReq* /*request*/, ::myApplication::modifyGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoModifyGoodInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::modifyGoodReq,::myApplication::modifyGoodRsq>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_doSearchGoodInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_doSearchGoodInfo() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::myApplication::searchGoodReq, ::myApplication::searchGoodRsq>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::myApplication::searchGoodReq, ::myApplication::searchGoodRsq>* streamer) {
                       return this->StreameddoSearchGoodInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_doSearchGoodInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status doSearchGoodInfo(::grpc::ServerContext* /*context*/, const ::myApplication::searchGoodReq* /*request*/, ::myApplication::searchGoodRsq* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreameddoSearchGoodInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::myApplication::searchGoodReq,::myApplication::searchGoodRsq>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_doLogin<WithStreamedUnaryMethod_doRegister<WithStreamedUnaryMethod_doModifyUserInfo<WithStreamedUnaryMethod_doSearchUserInfo<WithStreamedUnaryMethod_doModifyGoodInfo<WithStreamedUnaryMethod_doSearchGoodInfo<Service > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_doLogin<WithStreamedUnaryMethod_doRegister<WithStreamedUnaryMethod_doModifyUserInfo<WithStreamedUnaryMethod_doSearchUserInfo<WithStreamedUnaryMethod_doModifyGoodInfo<WithStreamedUnaryMethod_doSearchGoodInfo<Service > > > > > > StreamedService;
};

}  // namespace myApplication


#endif  // GRPC_basicInfoService_2eproto__INCLUDED
